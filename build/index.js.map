{"version":3,"sources":["../index.js"],"names":[],"mappings":";;AAAA;;AACA;;;;AACA;;;;;;AAEA;;;;;AAKA,IAAM,UAAU;AACd;AACA,QAAM,WAFQ;AAGd,QAAM,IAHQ;;AAKd;AACA,oBAAkB,EANJ;;AAQd;AACA,WAAS,KATK;AAUd,iBAAe,aAVD;AAWd,oBAAkB,KAXJ;;AAad;AACA;;AAEA;AACA;;AAEA,OAAK,mFAnBS;AAoBd,YAAU,iHApBI;AAqBd,uBAAqB,CAAC;AACpB,cAAU,iFADU;AAEpB,wBAAoB,CAAC,OAAD;AAFA,GAAD;AArBP,CAAhB;;AA2BA,SAAS,IAAT,CAAe,MAAf,EAAuB;AAAA,MACb,IADa,GACM,MADN,CACb,IADa;AAAA,MACP,GADO,GACM,MADN,CACP,GADO;AAAA,MACF,GADE,GACM,MADN,CACF,GADE;;AAGrB;;;;;;;AAMA,MAAM,eAAe,eAAK,IAAL,CAAU,IAAV,EAAgB,MAAhB,EAAwB,OAAxB,CAArB;AACA,OAAK,cAAL,CAAoB,YAApB;;AAEA;;;AAGA,OAAK,MAAL;AACA,MAAI,MAAJ;AACA,MAAI,MAAJ;;AAEA,SAAO,IAAP,CAAY,OAAZ,EAAqB,YAAM;AAAA,QACjB,GADiB,GACT,OADS,CACjB,GADiB;;;AAGzB,SAAK,QAAL,CAAc,EAAE,QAAF,EAAd;AACD,GAJD;AAKD;;AAED;AACA;AACA;AACA;AACA;;AAEA,qCAAO,OAAP,EACG,IADH,CACQ;AAAA,SAAM,qCAAO,OAAP,CAAN;AAAA,CADR,EAEG,IAFH,CAEQ,IAFR,EAGG,KAHH,CAGS,YAAM;AACX,UAAQ,GAAR,CAAY,oBAAZ;;AAEA,kCAAO,GAAP,CAAW,OAAX,EACG,IADH,CACQ;AAAA,WAAM,qCAAO,OAAP,CAAN;AAAA,GADR,EAEG,IAFH,CAEQ,IAFR,EAGG,KAHH,CAGS;AAAA,WAAO,QAAQ,KAAR,CAAc,2BAAd,EAA2C,GAA3C,CAAP;AAAA,GAHT;;AAKA;AACA,kCAAO,IAAP,CAAY,OAAZ,EAAqB,UAAC,GAAD,EAAM,IAAN,EAAe;AAClC,QAAI,GAAJ,EAAS;AACP,cAAQ,KAAR,CAAc,sBAAd,EAAsC,GAAtC;AACD;;AAED,YAAQ,GAAR,CAAY,iBAAZ;;AAEA,YAAQ,GAAR,CAAY,KAAK,KAAL,CAAW,CAAX,EAAc,GAAd,CAAkB,UAAC,GAAD,EAAS;AAAA,UAC7B,EAD6B,GACtB,GADsB,CAC7B,EAD6B;;AAErC,aAAO,gCAAO,KAAP,CAAa,OAAO,MAAP,CAAc,EAAd,EAAkB,OAAlB,EAA2B,EAAE,MAAF,EAA3B,CAAb,CAAP;AACD,KAHW,CAAZ;;AAKA;AACD,GAbD;AAcD,CA1BH","file":"index.js","sourcesContent":["import 'babel-polyfill';\nimport Chrome from 'chrome-remote-interface';\nimport main from './src/main';\n\n/**\n * Driver wrapper for Chrome Remote Debugging Protocol.\n * Expects an inspectable instance of Chrome running (use `npm run chrome`).\n */\n\nconst OPTIONS = {\n  // Chrome instance to attach to\n  host: 'localhost',\n  port: 9222,\n\n  // How many CSS selectors to allow (used to filter out resets, etc.)\n  maxRuleSelectors: 50,\n\n  // Output and logging options\n  verbose: false,\n  screenshotDir: 'screenshots',\n  writeScreenshots: false,\n\n  // url: 'http://jsbin.com/lutuqe',\n  // selector: '.test-element',\n\n  // url: 'http://tumblr.com',\n  // selector: '.login-section',\n\n  url: 'file:///Users/sarah/git/chrome-pdiff/examples/TooltipStylesInspiration/index.html',\n  selector: 'body > div > div.content > div > p:nth-child(1) > span.tooltip.tooltip-effect-1 > span.tooltip-content.clearfix',\n  pseudoStatesToForce: [{\n    selector: 'body > div > div.content > div > p:nth-child(1) > span.tooltip.tooltip-effect-1',\n    forcePseudoClasses: ['hover'],\n  }],\n};\n\nfunction init (chrome) {\n  const { Page, DOM, CSS } = chrome;\n\n  /**\n   * Call main function on page load. Syntax is short for:\n   * chrome.on('Page.loadEventFired', (params) => {\n   *   main(chrome, OPTIONS);\n   * });\n   */\n  const mainFunction = main.bind(null, chrome, OPTIONS);\n  Page.loadEventFired(mainFunction);\n\n  /**\n   * Enable domain agents for the protocol instance\n   */\n  Page.enable();\n  DOM.enable();\n  CSS.enable();\n\n  chrome.once('ready', () => {\n    const { url } = OPTIONS;\n\n    Page.navigate({ url });\n  });\n}\n\n// eslint-disable-next-line new-cap\n// Chrome(OPTIONS, init).on('error', function (err) {\n//   console.error('Cannot connect to Chrome:', err);\n//   this.close();\n// });\n\nChrome(OPTIONS)\n  .then(() => Chrome(OPTIONS))\n  .then(init)\n  .catch(() => {\n    console.log('Opening new tab...');\n\n    Chrome.New(OPTIONS)\n      .then(() => Chrome(OPTIONS))\n      .then(init)\n      .catch(err => console.error('Cannot connect to Chrome:', err));\n\n    // Close all tabs\n    Chrome.List(OPTIONS, (err, tabs) => {\n      if (err) {\n        console.error('Error fetching tabs:', err);\n      }\n\n      console.log('Closing tabs...');\n\n      Promise.all(tabs.slice(1).map((tab) => {\n        const { id } = tab;\n        return Chrome.Close(Object.assign({}, OPTIONS, { id }));\n      }));\n\n      // console.log(JSON.stringify(tabs, null, 2));\n    })\n  });\n"]}